{"ast":null,"code":"var _jsxFileName = \"/home/saqib/Desktop/ReactJs-Projects/myapp/src/Todo.js\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Todo = ({\n  todos,\n  completeTodo,\n  removeTodo,\n  editTodo,\n  editId,\n  handleEditChange,\n  inputValue,\n  setInputValue\n}) => {\n  return todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-row\",\n    children: [editId === todo.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: todo.isComplete ? \"complete\" : \"\",\n      onClick: () => completeTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), editId === todo.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => editTodo(todo.id, inputValue),\n      children: \"Edit todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FaWindowClose, {\n        onClick: () => removeTodo(todo.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FaRegEdit, {\n        onClick: () => handleEditChange(todo.id, todo.text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this));\n};\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/saqib/Desktop/ReactJs-Projects/myapp/src/Todo.js"],"names":["React","useState","Todo","todos","completeTodo","removeTodo","editTodo","editId","handleEditChange","inputValue","setInputValue","map","todo","id","e","target","value","isComplete","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AACZC,EAAAA,KADY;AAEZC,EAAAA,YAFY;AAGZC,EAAAA,UAHY;AAIZC,EAAAA,QAJY;AAKZC,EAAAA,MALY;AAMZC,EAAAA,gBANY;AAOZC,EAAAA,UAPY;AAQZC,EAAAA;AARY,CAAD,KASP;AACJ,SAAOP,KAAK,CAACQ,GAAN,CAAWC,IAAD,iBACf;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,eACGL,MAAM,KAAKK,IAAI,CAACC,EAAhB,gBACC;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEJ,UAFT;AAGE,MAAA,QAAQ,EAAGK,CAAD,IAAOJ,aAAa,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV;AAHhC;AAAA;AAAA;AAAA;AAAA,YADD,gBAOC;AAEE,MAAA,SAAS,EAAEJ,IAAI,CAACK,UAAL,GAAkB,UAAlB,GAA+B,EAF5C;AAGE,MAAA,OAAO,EAAE,MAAMb,YAAY,CAACQ,IAAI,CAACC,EAAN,CAH7B;AAAA,gBAKGD,IAAI,CAACM;AALR,OACON,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,YARJ,EAgBGN,MAAM,KAAKK,IAAI,CAACC,EAAhB,gBACC;AAAQ,MAAA,OAAO,EAAE,MAAMP,QAAQ,CAACM,IAAI,CAACC,EAAN,EAAUJ,UAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA,8BACE,QAAC,aAAD;AAAe,QAAA,OAAO,EAAE,MAAMJ,UAAU,CAACO,IAAI,CAACC,EAAN;AAAxC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,OAAO,EAAE,MAAML,gBAAgB,CAACI,IAAI,CAACC,EAAN,EAAUD,IAAI,CAACM,IAAf;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AA2BD,CArCD;;KAAMhB,I;AAuCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst Todo = ({\n  todos,\n  completeTodo,\n  removeTodo,\n  editTodo,\n  editId,\n  handleEditChange,\n  inputValue,\n  setInputValue\n}) => {\n  return todos.map((todo) => (\n    <div className=\"todo-row\">\n      {editId === todo.id ? (\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n      ) : (\n        <div\n          key={todo.id}\n          className={todo.isComplete ? \"complete\" : \"\"}\n          onClick={() => completeTodo(todo.id)}\n        >\n          {todo.text}\n        </div>\n      )}\n      {editId === todo.id ? (\n        <button onClick={() => editTodo(todo.id, inputValue)}>Edit todo</button>\n      ) : (\n        <>\n          <FaWindowClose onClick={() => removeTodo(todo.id)} />\n          <FaRegEdit onClick={() => handleEditChange(todo.id, todo.text)} />\n        </>\n      )}\n    </div>\n  ));\n};\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}