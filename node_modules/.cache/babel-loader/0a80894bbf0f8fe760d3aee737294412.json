{"ast":null,"code":"var _jsxFileName = \"/home/saqib/Desktop/ReactJs-Projects/myapp/src/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoList({\n  onClick\n}) {\n  _s();\n\n  const [todos, setTodos] = useState([]); //Track is edit clicked or not\n\n  const [editId, setEdit] = useState(false); //Save input value in input box\n\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleEditChange = (id, text) => {\n    setEdit(id);\n    setInputValue(text);\n  };\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n    console.log(newTodos);\n  };\n\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todoId => todoId.id !== id);\n    setTodos(removedArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const editTodo = (id, text) => {\n    let editTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.text = text;\n      }\n\n      return todo;\n    });\n    setTodos(editTodos);\n    setEdit(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo,\n      editTodo: editTodo,\n      handleEditChange: handleEditChange,\n      editId: editId,\n      inputValue: inputValue,\n      setInputValue: setInputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TodoList, \"3I2phwX5pS+JHkpyth2+vtBkdwQ=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/saqib/Desktop/ReactJs-Projects/myapp/src/TodoList.js"],"names":["React","useState","Todo","TodoList","onClick","todos","setTodos","editId","setEdit","inputValue","setInputValue","handleEditChange","id","text","addTodo","todo","test","newTodos","console","log","removeTodo","removedArr","filter","todoId","completeTodo","updatedTodos","map","isComplete","editTodo","editTodos"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA+B;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC,CAD6B,CAE7B;;AACA,QAAM,CAACM,MAAD,EAASC,OAAT,IAAoBP,QAAQ,CAAC,KAAD,CAAlC,CAH6B,CAI7B;;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMU,gBAAgB,GAAG,CAACC,EAAD,EAAKC,IAAL,KAAc;AACrCL,IAAAA,OAAO,CAACI,EAAD,CAAP;AACAF,IAAAA,aAAa,CAACG,IAAD,CAAb;AACD,GAHD;;AAIA,QAAMC,OAAO,GAAIC,IAAD,IAAU;AACxB,QAAI,CAACA,IAAI,CAACF,IAAN,IAAc,QAAQG,IAAR,CAAaD,IAAI,CAACF,IAAlB,CAAlB,EAA2C;AACzC;AACD;;AAED,UAAMI,QAAQ,GAAG,CAACF,IAAD,EAAO,GAAGV,KAAV,CAAjB;AAEAC,IAAAA,QAAQ,CAACW,QAAD,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,GATD;;AAWA,QAAMG,UAAU,GAAIR,EAAD,IAAQ;AACzB,UAAMS,UAAU,GAAG,CAAC,GAAGhB,KAAJ,EAAWiB,MAAX,CAAmBC,MAAD,IAAYA,MAAM,CAACX,EAAP,KAAcA,EAA5C,CAAnB;AAEAN,IAAAA,QAAQ,CAACe,UAAD,CAAR;AACD,GAJD;;AAMA,QAAMG,YAAY,GAAIZ,EAAD,IAAQ;AAC3B,QAAIa,YAAY,GAAGpB,KAAK,CAACqB,GAAN,CAAWX,IAAD,IAAU;AACrC,UAAIA,IAAI,CAACH,EAAL,KAAYA,EAAhB,EAAoB;AAClBG,QAAAA,IAAI,CAACY,UAAL,GAAkB,CAACZ,IAAI,CAACY,UAAxB;AACD;;AACD,aAAOZ,IAAP;AACD,KALkB,CAAnB;AAMAT,IAAAA,QAAQ,CAACmB,YAAD,CAAR;AACD,GARD;;AAUA,QAAMG,QAAQ,GAAG,CAAChB,EAAD,EAAKC,IAAL,KAAc;AAC7B,QAAIgB,SAAS,GAAGxB,KAAK,CAACqB,GAAN,CAAWX,IAAD,IAAU;AAClC,UAAIA,IAAI,CAACH,EAAL,KAAYA,EAAhB,EAAoB;AAClBG,QAAAA,IAAI,CAACF,IAAL,GAAYA,IAAZ;AACD;;AACD,aAAOE,IAAP;AACD,KALe,CAAhB;AAMAT,IAAAA,QAAQ,CAACuB,SAAD,CAAR;AACArB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GATD;;AAWA,sBACE;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAEM;AAAhB;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,IAAD;AACE,MAAA,KAAK,EAAET,KADT;AAEE,MAAA,YAAY,EAAEmB,YAFhB;AAGE,MAAA,UAAU,EAAEJ,UAHd;AAIE,MAAA,QAAQ,EAAEQ,QAJZ;AAKE,MAAA,gBAAgB,EAAEjB,gBALpB;AAME,MAAA,MAAM,EAAEJ,MANV;AAOE,MAAA,UAAU,EAAEE,UAPd;AAQE,MAAA,aAAa,EAAEC;AARjB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAgBD;;GAjEQP,Q;;KAAAA,Q;AAmET,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Todo from \"./Todo\";\n\nfunction TodoList({ onClick }) {\n  const [todos, setTodos] = useState([]);\n  //Track is edit clicked or not\n  const [editId, setEdit] = useState(false);\n  //Save input value in input box\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleEditChange = (id, text) => {\n    setEdit(id);\n    setInputValue(text);\n  };\n  const addTodo = (todo) => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n\n    setTodos(newTodos);\n    console.log(newTodos);\n  };\n\n  const removeTodo = (id) => {\n    const removedArr = [...todos].filter((todoId) => todoId.id !== id);\n\n    setTodos(removedArr);\n  };\n\n  const completeTodo = (id) => {\n    let updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const editTodo = (id, text) => {\n    let editTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.text = text;\n      }\n      return todo;\n    });\n    setTodos(editTodos);\n    setEdit(false);\n  };\n\n  return (\n    <>\n      <form onSubmit={addTodo} />\n      {/* I want to move this code below into a new component called Todo.js */}\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        editTodo={editTodo}\n        handleEditChange={handleEditChange}\n        editId={editId}\n        inputValue={inputValue}\n        setInputValue={setInputValue}\n      />\n    </>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}