{"ast":null,"code":"var _jsxFileName = \"/home/saqib/Desktop/ReactJs-Projects/myapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Todo() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [todo, settodo] = useState('');\n\n  const handleTodos = e => {\n    settodo(e.target.value);\n  };\n\n  const addTodos = () => {\n    const newTodos = [...todos, {\n      todo\n    }];\n    setTodos(newTodos);\n    settodo('');\n  };\n\n  const completeTodos = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  const editTodo = (id, text) => {\n    let editTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.text = text;\n      }\n\n      return todo;\n    });\n    setTodos(editTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Assignment No.3 in React (Todo List)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"todo\",\n      onChange: handleTodos,\n      value: todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addTodos(),\n      children: \" Add \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          textDecoration: item.isCompleted ? \"line-through\" : \"\"\n        },\n        children: [item.todo, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            completeTodos(index);\n          },\n          children: \" Complete \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            removeTodo(index);\n          },\n          children: \" Delete \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), editId === todo.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => editTodo(todo.id, inputValue),\n          children: \"Edit todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(FaWindowClose, {\n            onClick: () => removeTodo(todo.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FaRegEdit, {\n            onClick: () => handleEditChange(todo.id, todo.text)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"KQ6xCC5I06bIYqkrX+n+3DaW5hA=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/saqib/Desktop/ReactJs-Projects/myapp/src/App.js"],"names":["React","useState","Todo","todos","setTodos","todo","settodo","handleTodos","e","target","value","addTodos","newTodos","completeTodos","index","isCompleted","removeTodo","splice","editTodo","id","text","editTodos","map","item","textDecoration","editId","inputValue","handleEditChange"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nfunction Todo(){\n\n    const [todos, setTodos] = useState([ ]);\n    const [todo, settodo] = useState('');\n\n    const handleTodos = e => {\n        settodo(e.target.value);\n    }\n\n    const addTodos = () => {\n        const newTodos = [...todos, { todo }];\n        setTodos(newTodos);\n        settodo('');\n      };\n\n    const completeTodos = index => {\n        const newTodos = [...todos];\n        newTodos[index].isCompleted = true;\n        setTodos(newTodos);\n      };\n\n    const removeTodo = index => {\n        const newTodos = [...todos];\n        newTodos.splice(index, 1);\n        setTodos(newTodos);\n      };\n\n      const editTodo = (id, text) => {\n        let editTodos = todos.map((todo) => {\n          if (todo.id === id) {\n            todo.text = text;\n          }\n          return todo;\n        });\n        setTodos(editTodos);\n\n      };\n\n    return(\n        <div>\n            <h1>Assignment No.3 in React (Todo List)</h1>\n            <input type=\"todo\" onChange={handleTodos} value={todo}/>\n            <button onClick={() => addTodos()}> Add </button>\n            <ul>\n                {todos.map((item,index) => (\n                    <li  style={{ textDecoration: item.isCompleted ? \"line-through\" : \"\" }}>\n                        {item.todo} \n                    <button onClick={() => {completeTodos(index)}}> Complete </button> \n                    <button onClick={() => {removeTodo(index)}}> Delete </button> \n                    {editId === todo.id ? (\n        <button onClick={() => editTodo(todo.id, inputValue)}>Edit todo</button>\n      ) : (\n        <>\n          <FaWindowClose onClick={() => removeTodo(todo.id)} />\n          <FaRegEdit onClick={() => handleEditChange(todo.id, todo.text)} />\n        </>\n      )}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}